// <auto-generated />
using System;
using BankLine_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BankLine_API.Migrations
{
    [DbContext(typeof(BankLineDbContext))]
    [Migration("20240705155007_AdicaoController-Repositories")]
    partial class AdicaoControllerRepositories
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BankLine_API.Models.Conta", b =>
                {
                    b.Property<long>("Numero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("conta_numero");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Numero"));

                    b.Property<double>("Saldo")
                        .HasColumnType("float")
                        .HasColumnName("conta_saldo");

                    b.HasKey("Numero");

                    b.ToTable("tab_conta");
                });

            modelBuilder.Entity("BankLine_API.Models.Correntista", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("correntista_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long>("ContaNumero")
                        .HasColumnType("bigint")
                        .HasColumnName("conta_numero_fk");

                    b.Property<string>("Cpf")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("correntista_cpf");

                    b.Property<string>("Nome")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("correntista_nome");

                    b.HasKey("Id");

                    b.HasIndex("ContaNumero")
                        .IsUnique();

                    b.ToTable("tab_correntista");
                });

            modelBuilder.Entity("BankLine_API.Models.Movimentacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("movimentacao_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime2")
                        .HasColumnName("movimentacao_dt");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("movimentacao_desc");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("movimentacao_tipo");

                    b.Property<int>("Valor")
                        .HasColumnType("int")
                        .HasColumnName("movimentacao_valor");

                    b.HasKey("Id");

                    b.ToTable("tab_movimentacao");
                });

            modelBuilder.Entity("BankLine_API.Models.Correntista", b =>
                {
                    b.HasOne("BankLine_API.Models.Conta", "Conta")
                        .WithOne()
                        .HasForeignKey("BankLine_API.Models.Correntista", "ContaNumero")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conta");
                });
#pragma warning restore 612, 618
        }
    }
}
